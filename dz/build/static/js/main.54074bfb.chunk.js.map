{"version":3,"sources":["logo.svg","serviceWorker.js","components/Header/Header.jsx","components/MoneyBlock/MoneyBlock.jsx","pages/MainPage.jsx","components/FirebaseConfig.js","components/RegForm/RegForm.jsx","pages/Registration.jsx","components/SignInForm/SignInForm.jsx","pages/SignIn.jsx","components/Converter/Converter.jsx","pages/ConverterPage.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","state","exchange","prevProps","this","props","setState","button","to","style","textDecoration","color","className","src","logo","alt","React","Component","MoneyBlock","values","keys","componentDidMount","bind","fetch","then","res","json","result","rates","Object","error","map","key","toFixed","MainPage","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","RegForm","name","surname","login","password","image","redirect","handleChange","handleSubmit","event","target","value","firestore","collection","add","preventDefault","alert","updateData","push","onSubmit","onChange","type","placeholder","pattern","required","accept","Registration","SignInForm","get","snapshot","docs","forEach","doc","data","SignIn","Converter","firVal","secVal","firCh","secCh","componentDidUpdate","console","log","callApi","prevProp","prevState","secondCh","val","disabled","ConverterPage","App","basename","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.54074bfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b9122894.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport logo from '../../logo.svg';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component{\n\n  state = {\n    exchange: 0\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.exchange !== this.props.exchange){\n      this.setState({\n        exchange: 1\n      })\n    }\n  }\n\n  render(){\n    let button = null;\n    if (this.state.exchange){\n      button = <Link to='/exchange' style={{textDecoration: 'none', color: '#ffd700'}}><h3>Конвертер</h3></Link>\n    }\n\n    return (\n    <div>\n      <header className=\"App\">\n        <div className=\"upBlock\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          <h1>\n            <Link to='/' style={{textDecoration: 'none', color: '#ffd700'}}>Конвертер валют</Link>\n          </h1>\n        </div>\n        <div className=\"headerBlock\">\n            <Link to='/sign_up' style={{textDecoration: 'none', color: '#ffd700'}}>\n                <h3>\n                  Регистрация\n                </h3>\n            </Link>\n            {button}\n            <Link to='/sign_in' style={{textDecoration: 'none', color: '#ffd700'}}>\n              <h3>\n                Войти\n              </h3>\n            </Link>\n          </div>\n      </header>\n    </div>\n  );\n  }\n}\n\nexport default Header;\n","import React from 'react'\r\nimport './MoneyBlock.css'\r\n\r\nclass MoneyBlock extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            values: {},\r\n            keys: []\r\n        };\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.exchangeratesapi.io/latest?base=RUB\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    values: result.rates,\r\n                    keys: Object.keys(result.rates)\r\n                });\r\n            },\r\n            (error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {values, keys} = this.state;\r\n        return (\r\n            <ul>\r\n                {keys.map(key => (\r\n                    <div className=\"moneyBlock\">\r\n                        <p className=\"text\">Валюта {key}: 1 {key} -> {(1/values[key]).toFixed(2)} RUB</p>\r\n                    </div>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoneyBlock;","import React from 'react'\r\nimport MoneyBlock from '../components/MoneyBlock/MoneyBlock.jsx';\r\n\r\n\r\nclass MainPage extends React.Component {\r\n    render() {\r\n        return(\r\n            <MoneyBlock />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBdVqlf5DWH1IzWBUZg96KNdQ4aws5m1i4\",\r\n    authDomain: \"dzproject.firebaseapp.com\",\r\n    databaseURL: \"https://dzproject.firebaseio.com\",\r\n    projectId: \"dzproject\",\r\n    storageBucket: \"dzproject.appspot.com\",\r\n    messagingSenderId: \"179202583440\",\r\n    appId: \"1:179202583440:web:a38c391f9ae9a43cd3a115\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react'\r\nimport './RegForm.css'\r\n\r\nimport firebase from '../FirebaseConfig'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass RegForm extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            surname: \"\",\r\n            login: \"\",\r\n            password: \"\",\r\n            image: \"\",\r\n            redirect: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        firebase.firestore().collection('auth').add({\r\n            name: this.state.name,\r\n            surname: this.state.surname,\r\n            login: this.state.login,\r\n            password: this.state.password,\r\n            image: this.state.image\r\n        });\r\n        event.preventDefault();\r\n        this.setState({ redirect: true})\r\n        alert(\"Вы успешно зарегистрированы!\")\r\n        this.props.updateData(1)\r\n    }\r\n\r\n    render() {\r\n        const {name, surname, login, password, image, redirect} = this.state;\r\n        if (redirect === true){\r\n            return <Redirect push to=\"/\" />\r\n        }\r\n        return(\r\n            <form className=\"regList\" onSubmit={this.handleSubmit}>\r\n                <h2>Авторизация</h2>\r\n                <input className=\"textInput\" name=\"name\" value={name} onChange={this.handleChange} type=\"text\" placeholder=\"    Имя\" pattern=\"[А-Яа-яЁё]+\"></input>\r\n                <input className=\"textInput\" name=\"surname\" value={surname} onChange={this.handleChange} type=\"text\" placeholder=\"    Фамилия\" pattern=\"[А-Яа-яЁё]+\"></input>\r\n                <input className=\"textInput\" name=\"login\" value={login} onChange={this.handleChange} type=\"text\" placeholder=\"    Login *\" required></input>\r\n                <input className=\"textInput\" name=\"password\" value={password} onChange={this.handleChange} type=\"text\" placeholder=\"    Пароль *\" required></input>\r\n                <input type=\"file\" name=\"image\" value={image} onChange={this.handleChange} accept=\"image/jpg\"className=\"imageBut\"></input>\r\n                <input type=\"submit\" value=\"Зарегистрироваться\"></input>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegForm;","import React from 'react'\r\nimport RegForm from '../components/RegForm/RegForm';\r\n\r\nclass Registration extends React.Component {\r\n    render() {\r\n        return(\r\n            <RegForm updateData={this.props.updateData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registration;","import React from 'react'\r\nimport './SignInForm.css'\r\n\r\nimport firebase from '../FirebaseConfig'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignInForm extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            login: \"\",\r\n            password: \"\",\r\n            redirect: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        firebase.firestore().collection('auth').get().then((snapshot) => {\r\n            snapshot.docs.forEach(doc => {\r\n                if((this.state.login === doc.data().login) && (this.state.password === doc.data().password)){\r\n                    this.setState({ redirect: true})\r\n                    alert(\"Вы успешно вошли!\")\r\n                    this.props.updateData(1)\r\n                    return;\r\n                }\r\n            })\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const {login, password, redirect} = this.state;\r\n        if (redirect === true){\r\n            return <Redirect push to=\"/\" />\r\n        }\r\n        return(\r\n            <form className=\"signList\" onSubmit={this.handleSubmit}>\r\n                <h2>Вход</h2>\r\n                <input name=\"login\" value={login} onChange={this.handleChange} className=\"textInput\" type=\"text\" placeholder=\"    Login *\" required></input>\r\n                <input name=\"password\" value={password} onChange={this.handleChange} className=\"textInput\" type=\"password\" placeholder=\"    Пароль *\" required></input>\r\n                <input type=\"submit\" value=\"Войти\"></input>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;","import React from 'react'\r\nimport SignInForm from '../components/SignInForm/SignInForm';\r\n\r\nclass SignIn extends React.Component {\r\n    render() {\r\n        return(\r\n            <SignInForm updateData={this.props.updateData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react'\r\nimport './Converter.css'\r\n\r\nclass Converter extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            firVal: \"USD\",\r\n            secVal: \"USD\",\r\n            firCh: 1,\r\n            secCh: 1,\r\n            values: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.state.values)\r\n        this.callApi(this.state.firVal);\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState){\r\n        const secondCh = (this.state.firCh * this.state.values[this.state.secVal]).toFixed(2)\r\n        if(this.state.secCh !== secondCh){\r\n            console.log(this.state.values)\r\n            this.setState({secCh : secondCh})\r\n        }\r\n    }\r\n\r\n    callApi(val){\r\n        fetch(\"https://api.exchangeratesapi.io/latest?base=\" + val)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    values: result.rates,\r\n                    firVal: val\r\n                });\r\n            },\r\n            (error) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    handleChange(event){\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        if (name === \"firVal\") {\r\n            this.callApi(value)\r\n        }\r\n        else {\r\n            this.setState({\r\n                [name] : value\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {firVal, secVal, firCh, secCh} = this.state\r\n        return(\r\n            <form className=\"convBlock\">\r\n                <h2>Конвертер</h2>\r\n                <div className=\"inputBlock\">\r\n                    <input name=\"firCh\" value={firCh} placeholder=\"Исходная валюта\" type=\"number\" className=\"numInp\" onChange={this.handleChange}></input>\r\n                    <h4> --> </h4>\r\n                    <input type=\"number\" value={secCh} placeholder=\"Итоговая валюта\" className=\"numInp\" disabled></input>\r\n                </div>\r\n                <div className=\"valBlock\">\r\n                    <select name=\"firVal\" value={firVal} onChange={this.handleChange}>\r\n                        <option value=\"USD\">Доллар</option>\r\n                        <option value=\"EUR\">Евро</option>\r\n                        <option value=\"CAD\">Канадский доллар</option>\r\n                        <option value=\"HKD\">Гонконгский доллар</option>\r\n                        <option value=\"ISK\">Исландская крона</option>\r\n                        <option value=\"PHP\">Филиппинское песо</option>\r\n                        <option value=\"DKK\">Датская крона</option>\r\n                        <option value=\"HUF\">Венгерский форинт</option>\r\n                        <option value=\"CZK\">Чешская крона</option>\r\n                        <option value=\"GBP\">Фунт стерлинга</option>\r\n                        <option value=\"RON\">Румынские лей</option>\r\n                        <option value=\"HKD\">Гонконгский доллар</option>\r\n                        <option value=\"SEK\">Шведская крона</option>\r\n                        <option value=\"IDR\">Индонезийская рупия</option>\r\n                        <option value=\"INR\">Индийская рупия</option>\r\n                        <option value=\"BRL\">Бразильский реал</option>\r\n                        <option value=\"RUB\">Рубль</option>\r\n                        <option value=\"HRK\">Хорватская куна</option>\r\n                        <option value=\"JPY\">Японская иена</option>\r\n                        <option value=\"THB\">Тайский бат</option>\r\n                        <option value=\"CHF\">Швейцарский франк</option>\r\n                        <option value=\"MYR\">Малайзийский ринггит</option>\r\n                        <option value=\"BGN\">Болгарский лев</option>\r\n                        <option value=\"TRY\">Турецкая лира</option>\r\n                        <option value=\"CNY\">Китайский юань</option>\r\n                        <option value=\"NOK\">Норвежская крона</option>\r\n                        <option value=\"NZD\">Новозеландский доллар</option>\r\n                        <option value=\"ZAR\">Южноафриканский ранд</option>\r\n                        <option value=\"MXN\">Мексиканское песо</option>\r\n                        <option value=\"SGD\">Сингапурский доллар</option>\r\n                        <option value=\"AUD\">Австралийский доллар</option>\r\n                        <option value=\"ILS\">Израильские шекели</option>\r\n                        <option value=\"KRW\">Юэнокорейская вона</option>\r\n                        <option value=\"PLN\">Польский злотый</option>\r\n                    </select>\r\n                    <select name=\"secVal\" value={secVal} onChange={this.handleChange}>\r\n                        <option value=\"USD\">Доллар</option>\r\n                        <option value=\"EUR\">Евро</option>\r\n                        <option value=\"CAD\">Канадский доллар</option>\r\n                        <option value=\"HKD\">Гонконгский доллар</option>\r\n                        <option value=\"ISK\">Исландская крона</option>\r\n                        <option value=\"PHP\">Филиппинское песо</option>\r\n                        <option value=\"DKK\">Датская крона</option>\r\n                        <option value=\"HUF\">Венгерский форинт</option>\r\n                        <option value=\"CZK\">Чешская крона</option>\r\n                        <option value=\"GBP\">Фунт стерлинга</option>\r\n                        <option value=\"RON\">Румынские лей</option>\r\n                        <option value=\"HKD\">Гонконгский доллар</option>\r\n                        <option value=\"SEK\">Шведская крона</option>\r\n                        <option value=\"IDR\">Индонезийская рупия</option>\r\n                        <option value=\"INR\">Индийская рупия</option>\r\n                        <option value=\"BRL\">Бразильский реал</option>\r\n                        <option value=\"RUB\">Рубль</option>\r\n                        <option value=\"HRK\">Хорватская куна</option>\r\n                        <option value=\"JPY\">Японская иена</option>\r\n                        <option value=\"THB\">Тайский бат</option>\r\n                        <option value=\"CHF\">Швейцарский франк</option>\r\n                        <option value=\"MYR\">Малайзийский ринггит</option>\r\n                        <option value=\"BGN\">Болгарский лев</option>\r\n                        <option value=\"TRY\">Турецкая лира</option>\r\n                        <option value=\"CNY\">Китайский юань</option>\r\n                        <option value=\"NOK\">Норвежская крона</option>\r\n                        <option value=\"NZD\">Новозеландский доллар</option>\r\n                        <option value=\"ZAR\">Южноафриканский ранд</option>\r\n                        <option value=\"MXN\">Мексиканское песо</option>\r\n                        <option value=\"SGD\">Сингапурский доллар</option>\r\n                        <option value=\"AUD\">Австралийский доллар</option>\r\n                        <option value=\"ILS\">Израильские шекели</option>\r\n                        <option value=\"KRW\">Юэнокорейская вона</option>\r\n                        <option value=\"PLN\">Польский злотый</option>\r\n                    </select>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Converter","import React from 'react'\r\nimport Converter from '../components/Converter/Converter'\r\n\r\nclass ConverterPage extends React.Component{\r\n    render() {\r\n        return(\r\n            <Converter />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConverterPage","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Header from './components/Header/Header';\r\nimport MainPage from './pages/MainPage'\r\nimport Registration from './pages/Registration';\r\nimport SignIn from './pages/SignIn';\r\nimport ConverterPage from './pages/ConverterPage';\r\n\r\nclass App extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            exchange: 0\r\n        }\r\n    }\r\n\r\n    updateData = (value) => {\r\n        this.setState({\r\n            exchange: value\r\n        })\r\n        console.log(value)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Router basename=\"/ds/build\">\r\n                <Header exchange={this.state.exchange} />\r\n                <Switch>\r\n                    <Route path = \"/sign_up\">\r\n                        <Registration updateData={this.updateData} />\r\n                    </Route>\r\n                    <Route path = \"/sign_in\">\r\n                        <SignIn updateData={this.updateData} />\r\n                    </Route>\r\n                    <Route path = \"/exchange\">\r\n                        <ConverterPage />\r\n                    </Route>\r\n                    <Route path = \"/\">\r\n                        <MainPage />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}